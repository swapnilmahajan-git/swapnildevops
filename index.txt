Now you get the call that there is an issue with the web site, and you need
to fix it immediately. With Git, you don’t have to deploy your fix along with
55Chapter 3 Git Branching
Scott Chacon Pro Git
the iss53 changes you’ve made, and you don’t have to put a lot of effort into
reverting those changes before you can work on applying your fix to what is in
production. All you have to do is switch back to your master branch.
However, before you do that, note that if your working directory or staging
area has uncommitted changes that conflict with the branch you’re checking out,
Git won’t let you switch branches. It’s best to have a clean working state when
you switch branches. There are ways to get around this (namely, stashing and
commit amending) that we’ll cover later. For now, you’ve committed all your
changes, so you can switch back to your master branch:








Now you get the call that there is an issue with the web site, and you need
to fix it immediately. With Git, you don’t have to deploy your fix along with
55Chapter 3 Git Branching
Scott Chacon Pro Git
the iss53 changes you’ve made, and you don’t have to put a lot of effort into
reverting those changes before you can work on applying your fix to what is in
production. All you have to do is switch back to your master branch.
However, before you do that, note that if your working directory or staging
area has uncommitted changes that conflict with the branch you’re checking out,
Git won’t let you switch branches. It’s best to have a clean working state when
you switch branches. There are ways to get around this (namely, stashing and
commit amending) that we’ll cover later. For now, you’ve committed all your
changes, so you can switch back to your master branch:








